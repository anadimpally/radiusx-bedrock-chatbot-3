{
  "openapi": "3.1.0",
  "info": {
    "title": "Bedrock Claude Chat Published API",
    "version": "0.1.0"
  },
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "published_api"
        ],
        "summary": "Health",
        "description": "For health check",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/conversation": {
      "post": {
        "tags": [
          "published_api"
        ],
        "summary": "Post Message",
        "description": "Send chat message",
        "operationId": "post_message_conversation_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatInputWithoutBotId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageRequestedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/conversation/{conversation_id}": {
      "get": {
        "tags": [
          "published_api"
        ],
        "summary": "Get Conversation",
        "description": "Get a conversation history. If the conversation does not exist, it will return 404.",
        "operationId": "get_conversation_conversation__conversation_id__get",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/conversation/{conversation_id}/{message_id}": {
      "get": {
        "tags": [
          "published_api"
        ],
        "summary": "Get Message",
        "description": "Get specified message in a conversation. If the message does not exist, it will return 404.",
        "operationId": "get_message_conversation__conversation_id___message_id__get",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Conversation Id"
            }
          },
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatOutputWithoutBotId"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AttachmentContent": {
        "properties": {
          "contentType": {
            "type": "string",
            "const": "attachment",
            "title": "Contenttype",
            "description": "Content type. Note that image is only available for claude 3."
          },
          "fileName": {
            "type": "string",
            "title": "Filename",
            "description": "File name of the attachment. Must be specified if `content_type` is `attachment`."
          },
          "body": {
            "type": "string",
            "title": "Body",
            "description": "Content body."
          }
        },
        "type": "object",
        "required": [
          "contentType",
          "fileName",
          "body"
        ],
        "title": "AttachmentContent"
      },
      "ChatInputWithoutBotId": {
        "properties": {
          "conversationId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversationid",
            "description": "Unique conversation id. \n        If not provided, new conversation will be generated."
          },
          "message": {
            "$ref": "#/components/schemas/MessageInputWithoutMessageId"
          },
          "continueGenerate": {
            "type": "boolean",
            "title": "Continuegenerate",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ChatInputWithoutBotId"
      },
      "ChatOutputWithoutBotId": {
        "properties": {
          "conversationId": {
            "type": "string",
            "title": "Conversationid"
          },
          "message": {
            "$ref": "#/components/schemas/MessageOutput"
          },
          "createTime": {
            "type": "number",
            "title": "Createtime"
          }
        },
        "type": "object",
        "required": [
          "conversationId",
          "message",
          "createTime"
        ],
        "title": "ChatOutputWithoutBotId"
      },
      "Chunk": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "contentType": {
            "type": "string",
            "title": "Contenttype"
          },
          "source": {
            "type": "string",
            "title": "Source"
          },
          "rank": {
            "type": "integer",
            "title": "Rank"
          }
        },
        "type": "object",
        "required": [
          "content",
          "contentType",
          "source",
          "rank"
        ],
        "title": "Chunk"
      },
      "Conversation": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "createTime": {
            "type": "number",
            "title": "Createtime"
          },
          "messageMap": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MessageOutput"
            },
            "type": "object",
            "title": "Messagemap"
          },
          "lastMessageId": {
            "type": "string",
            "title": "Lastmessageid"
          },
          "botId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Botid"
          },
          "shouldContinue": {
            "type": "boolean",
            "title": "Shouldcontinue"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "createTime",
          "messageMap",
          "lastMessageId",
          "botId",
          "shouldContinue"
        ],
        "title": "Conversation"
      },
      "DocumentToolResult": {
        "properties": {
          "format": {
            "type": "string",
            "enum": [
              "csv",
              "doc",
              "docx",
              "html",
              "md",
              "pdf",
              "txt",
              "xls",
              "xlsx"
            ],
            "title": "Format"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "document": {
            "type": "string",
            "title": "Document"
          }
        },
        "type": "object",
        "required": [
          "format",
          "name",
          "document"
        ],
        "title": "DocumentToolResult"
      },
      "FeedbackOutput": {
        "properties": {
          "thumbsUp": {
            "type": "boolean",
            "title": "Thumbsup"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "comment": {
            "type": "string",
            "title": "Comment"
          }
        },
        "type": "object",
        "required": [
          "thumbsUp",
          "category",
          "comment"
        ],
        "title": "FeedbackOutput"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImageContent": {
        "properties": {
          "contentType": {
            "type": "string",
            "const": "image",
            "title": "Contenttype",
            "description": "Content type. Note that image is only available for claude 3."
          },
          "mediaType": {
            "type": "string",
            "title": "Mediatype",
            "description": "MIME type of the image. Must be specified if `content_type` is `image`."
          },
          "body": {
            "type": "string",
            "title": "Body",
            "description": "Content body."
          }
        },
        "type": "object",
        "required": [
          "contentType",
          "mediaType",
          "body"
        ],
        "title": "ImageContent"
      },
      "ImageToolResult": {
        "properties": {
          "format": {
            "type": "string",
            "enum": [
              "gif",
              "jpeg",
              "png",
              "webp"
            ],
            "title": "Format"
          },
          "image": {
            "type": "string",
            "title": "Image"
          }
        },
        "type": "object",
        "required": [
          "format",
          "image"
        ],
        "title": "ImageToolResult"
      },
      "JsonToolResult": {
        "properties": {
          "json": {
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonValue"
            },
            "type": "object",
            "title": "Json"
          }
        },
        "type": "object",
        "required": [
          "json"
        ],
        "title": "JsonToolResult"
      },
      "JsonValue": {},
      "MessageInputWithoutMessageId": {
        "properties": {
          "content": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TextContent"
                },
                {
                  "$ref": "#/components/schemas/ImageContent"
                },
                {
                  "$ref": "#/components/schemas/AttachmentContent"
                },
                {
                  "$ref": "#/components/schemas/ToolUseContent-Input"
                },
                {
                  "$ref": "#/components/schemas/ToolResultContent-Input"
                }
              ],
              "discriminator": {
                "propertyName": "contentType",
                "mapping": {
                  "attachment": "#/components/schemas/AttachmentContent",
                  "image": "#/components/schemas/ImageContent",
                  "text": "#/components/schemas/TextContent",
                  "toolResult": "#/components/schemas/ToolResultContent-Input",
                  "toolUse": "#/components/schemas/ToolUseContent-Input"
                }
              }
            },
            "type": "array",
            "title": "Content"
          },
          "model": {
            "type": "string",
            "enum": [
              "claude-instant-v1",
              "claude-v2",
              "claude-v3-sonnet",
              "claude-v3.5-sonnet",
              "claude-v3.5-sonnet-v2",
              "claude-v3.7-sonnet",
              "claude-v3.5-haiku",
              "claude-v3-haiku",
              "claude-v3-opus",
              "mistral-7b-instruct",
              "mixtral-8x7b-instruct",
              "mistral-large",
              "amazon-nova-pro",
              "amazon-nova-lite",
              "amazon-nova-micro"
            ],
            "title": "Model"
          }
        },
        "type": "object",
        "required": [
          "content",
          "model"
        ],
        "title": "MessageInputWithoutMessageId"
      },
      "MessageOutput": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role",
            "description": "Role of the message. Either `user` or `bot`."
          },
          "content": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TextContent"
                },
                {
                  "$ref": "#/components/schemas/ImageContent"
                },
                {
                  "$ref": "#/components/schemas/AttachmentContent"
                },
                {
                  "$ref": "#/components/schemas/ToolUseContent-Output"
                },
                {
                  "$ref": "#/components/schemas/ToolResultContent-Output"
                }
              ],
              "discriminator": {
                "propertyName": "contentType",
                "mapping": {
                  "attachment": "#/components/schemas/AttachmentContent",
                  "image": "#/components/schemas/ImageContent",
                  "text": "#/components/schemas/TextContent",
                  "toolResult": "#/components/schemas/ToolResultContent-Output",
                  "toolUse": "#/components/schemas/ToolUseContent-Output"
                }
              }
            },
            "type": "array",
            "title": "Content"
          },
          "model": {
            "type": "string",
            "enum": [
              "claude-instant-v1",
              "claude-v2",
              "claude-v3-sonnet",
              "claude-v3.5-sonnet",
              "claude-v3.5-sonnet-v2",
              "claude-v3.7-sonnet",
              "claude-v3.5-haiku",
              "claude-v3-haiku",
              "claude-v3-opus",
              "mistral-7b-instruct",
              "mixtral-8x7b-instruct",
              "mistral-large",
              "amazon-nova-pro",
              "amazon-nova-lite",
              "amazon-nova-micro"
            ],
            "title": "Model"
          },
          "children": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Children"
          },
          "feedback": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackOutput"
              },
              {
                "type": "null"
              }
            ]
          },
          "usedChunks": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Chunk"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usedchunks"
          },
          "parent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent"
          },
          "thinkingLog": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SimpleMessage"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thinkinglog"
          }
        },
        "type": "object",
        "required": [
          "role",
          "content",
          "model",
          "children",
          "feedback",
          "usedChunks",
          "parent",
          "thinkingLog"
        ],
        "title": "MessageOutput"
      },
      "MessageRequestedResponse": {
        "properties": {
          "conversationId": {
            "type": "string",
            "title": "Conversationid"
          },
          "messageId": {
            "type": "string",
            "title": "Messageid"
          }
        },
        "type": "object",
        "required": [
          "conversationId",
          "messageId"
        ],
        "title": "MessageRequestedResponse"
      },
      "SimpleMessage": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role"
          },
          "content": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TextContent"
                },
                {
                  "$ref": "#/components/schemas/ImageContent"
                },
                {
                  "$ref": "#/components/schemas/AttachmentContent"
                },
                {
                  "$ref": "#/components/schemas/ToolUseContent-Output"
                },
                {
                  "$ref": "#/components/schemas/ToolResultContent-Output"
                }
              ],
              "discriminator": {
                "propertyName": "contentType",
                "mapping": {
                  "attachment": "#/components/schemas/AttachmentContent",
                  "image": "#/components/schemas/ImageContent",
                  "text": "#/components/schemas/TextContent",
                  "toolResult": "#/components/schemas/ToolResultContent-Output",
                  "toolUse": "#/components/schemas/ToolUseContent-Output"
                }
              }
            },
            "type": "array",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "role",
          "content"
        ],
        "title": "SimpleMessage"
      },
      "TextContent": {
        "properties": {
          "contentType": {
            "type": "string",
            "const": "text",
            "title": "Contenttype",
            "description": "Content type. Note that image is only available for claude 3."
          },
          "body": {
            "type": "string",
            "title": "Body",
            "description": "Content body."
          }
        },
        "type": "object",
        "required": [
          "contentType",
          "body"
        ],
        "title": "TextContent"
      },
      "TextToolResult": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "TextToolResult"
      },
      "ToolResultContent-Input": {
        "properties": {
          "contentType": {
            "type": "string",
            "const": "toolResult",
            "title": "Contenttype",
            "description": "Content type. Note that image is only available for claude 3."
          },
          "body": {
            "$ref": "#/components/schemas/ToolResultContentBody-Input"
          }
        },
        "type": "object",
        "required": [
          "contentType",
          "body"
        ],
        "title": "ToolResultContent"
      },
      "ToolResultContent-Output": {
        "properties": {
          "contentType": {
            "type": "string",
            "const": "toolResult",
            "title": "Contenttype",
            "description": "Content type. Note that image is only available for claude 3."
          },
          "body": {
            "$ref": "#/components/schemas/ToolResultContentBody-Output"
          }
        },
        "type": "object",
        "required": [
          "contentType",
          "body"
        ],
        "title": "ToolResultContent"
      },
      "ToolResultContentBody-Input": {
        "properties": {
          "toolUseId": {
            "type": "string",
            "title": "Tooluseid"
          },
          "content": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TextToolResult"
                },
                {
                  "$ref": "#/components/schemas/JsonToolResult"
                },
                {
                  "$ref": "#/components/schemas/ImageToolResult"
                },
                {
                  "$ref": "#/components/schemas/DocumentToolResult"
                }
              ]
            },
            "type": "array",
            "title": "Content"
          },
          "status": {
            "type": "string",
            "enum": [
              "error",
              "success"
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "toolUseId",
          "content",
          "status"
        ],
        "title": "ToolResultContentBody"
      },
      "ToolResultContentBody-Output": {
        "properties": {
          "toolUseId": {
            "type": "string",
            "title": "Tooluseid"
          },
          "content": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TextToolResult"
                },
                {
                  "$ref": "#/components/schemas/JsonToolResult"
                },
                {
                  "$ref": "#/components/schemas/ImageToolResult"
                },
                {
                  "$ref": "#/components/schemas/DocumentToolResult"
                }
              ]
            },
            "type": "array",
            "title": "Content"
          },
          "status": {
            "type": "string",
            "enum": [
              "error",
              "success"
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "toolUseId",
          "content",
          "status"
        ],
        "title": "ToolResultContentBody"
      },
      "ToolUseContent-Input": {
        "properties": {
          "contentType": {
            "type": "string",
            "const": "toolUse",
            "title": "Contenttype",
            "description": "Content type. Note that image is only available for claude 3."
          },
          "body": {
            "$ref": "#/components/schemas/ToolUseContentBody"
          }
        },
        "type": "object",
        "required": [
          "contentType",
          "body"
        ],
        "title": "ToolUseContent"
      },
      "ToolUseContent-Output": {
        "properties": {
          "contentType": {
            "type": "string",
            "const": "toolUse",
            "title": "Contenttype",
            "description": "Content type. Note that image is only available for claude 3."
          },
          "body": {
            "$ref": "#/components/schemas/ToolUseContentBody"
          }
        },
        "type": "object",
        "required": [
          "contentType",
          "body"
        ],
        "title": "ToolUseContent"
      },
      "ToolUseContentBody": {
        "properties": {
          "toolUseId": {
            "type": "string",
            "title": "Tooluseid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "input": {
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonValue"
            },
            "type": "object",
            "title": "Input"
          }
        },
        "type": "object",
        "required": [
          "toolUseId",
          "name",
          "input"
        ],
        "title": "ToolUseContentBody"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  },
  "tags": [
    {
      "name": "published_api",
      "description": "Published API"
    }
  ]
}